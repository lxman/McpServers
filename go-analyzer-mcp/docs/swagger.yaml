basePath: /
definitions:
  analyzer.AnalyzeCodeInput:
    properties:
      code:
        type: string
      fileName:
        type: string
    type: object
  analyzer.AnalyzeCodeOutput:
    properties:
      diagnostics:
        items:
          $ref: '#/definitions/analyzer.Diagnostic'
        type: array
      error_count:
        type: integer
      success:
        type: boolean
      warning_count:
        type: integer
    type: object
  analyzer.CalculateMetricsInput:
    properties:
      code:
        type: string
    type: object
  analyzer.CalculateMetricsOutput:
    properties:
      error:
        type: string
      function_metrics:
        items:
          $ref: '#/definitions/analyzer.FunctionMetrics'
        type: array
      metrics:
        $ref: '#/definitions/analyzer.CodeMetrics'
      success:
        type: boolean
    type: object
  analyzer.CodeMetrics:
    properties:
      average_complexity:
        type: number
      blank_lines:
        type: integer
      comment_lines:
        type: integer
      function_count:
        type: integer
      lines_of_code:
        type: integer
      max_complexity:
        type: integer
      total_complexity:
        type: integer
      type_count:
        type: integer
    type: object
  analyzer.Diagnostic:
    properties:
      column:
        type: integer
      file:
        type: string
      line:
        type: integer
      message:
        type: string
      severity:
        description: '"error" or "warning"'
        type: string
    type: object
  analyzer.FormatCodeInput:
    properties:
      code:
        type: string
    type: object
  analyzer.FormatCodeOutput:
    properties:
      error:
        type: string
      formatted_code:
        type: string
      success:
        type: boolean
    type: object
  analyzer.FunctionMetrics:
    properties:
      cyclomatic_complexity:
        type: integer
      line:
        type: integer
      lines_of_code:
        type: integer
      name:
        type: string
    type: object
  analyzer.GetSymbolsInput:
    properties:
      code:
        type: string
      filter:
        type: string
    type: object
  analyzer.GetSymbolsOutput:
    properties:
      count:
        type: integer
      error:
        type: string
      success:
        type: boolean
      symbols:
        items:
          $ref: '#/definitions/analyzer.Symbol'
        type: array
    type: object
  analyzer.Symbol:
    properties:
      column:
        type: integer
      kind:
        description: '"function", "type", "const", "var", "method", "struct", "interface"'
        type: string
      line:
        type: integer
      name:
        type: string
      receiver:
        description: For methods
        type: string
      signature:
        type: string
      type_name:
        description: For methods, fields
        type: string
    type: object
host: localhost:7300
info:
  contact: {}
  description: Go code analysis tools with auto-generated OpenAPI documentation
  title: Go Analyzer API
  version: "1.0"
paths:
  /api/go/analyze:
    post:
      consumes:
      - application/json
      description: Analyze Go code for errors and warnings using go vet
      parameters:
      - description: Code to analyze
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/analyzer.AnalyzeCodeInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/analyzer.AnalyzeCodeOutput'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Analyze Go code
      tags:
      - Go Analyzer
  /api/go/format:
    post:
      consumes:
      - application/json
      description: Format Go code using gofmt
      parameters:
      - description: Code to format
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/analyzer.FormatCodeInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/analyzer.FormatCodeOutput'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Format Go code
      tags:
      - Go Analyzer
  /api/go/metrics:
    post:
      consumes:
      - application/json
      description: Calculate code metrics including cyclomatic complexity
      parameters:
      - description: Code to analyze
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/analyzer.CalculateMetricsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/analyzer.CalculateMetricsOutput'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Calculate metrics
      tags:
      - Go Analyzer
  /api/go/symbols:
    post:
      consumes:
      - application/json
      description: Extract symbols (functions, types, variables) from Go code
      parameters:
      - description: Code to analyze
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/analyzer.GetSymbolsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/analyzer.GetSymbolsOutput'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Extract symbols
      tags:
      - Go Analyzer
  /description:
    get:
      description: Returns the complete OpenAPI 3.0 specification
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get OpenAPI specification
      tags:
      - Documentation
swagger: "2.0"
